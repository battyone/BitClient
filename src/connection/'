#!/usr/bin/dev python3
# Bitclient -- tracker.py

from urllib.parse import urlparse
import re
import socket

class Tracker(object):
  def __init__(self,tracker_url):
    '''Initializes our communication socket and keep it open. The port info
    is extracted from the URL provided'''
    self.tracker_url = tracker_url
    self.p = urlparse(self.tracker_url)
    m = re.search(":",self.p.netloc)
    if m is None:
      self.port = 80
      self.host = self.p.netloc
    else:
      self.port = int(self.p.netloc[m.end():-1])
      self.host = self.p.netloc[:m.end()-1]
    self.sock = socket.socket()

  def query_tracker(self):
    '''From the metafile, query the tracker(s)'''

  def announce(self,query_string):
    '''Announce to the tracker'''
    print("Host: %s\tPort: %s"%(self.host,self.port))
    print("p keys: %s"%p.keys())
    self.sock.connect((self.host,self.port))
    self.sock.sendall(
      'GET %s HTTP/1.1\r\n'
      'Host: %s'
      'User-Agent: BitClient\r\n'
      'Connection: close\r\n'
      '\r\n'%(query_string,self.tracker_url))
    rawreply = self.sock.recv(4096)
    print(rawreply)
#    print(self.tracker_url+query_string)

  def reannounce(self):
    '''Re-announce'''

  def parse_tracker_response(self,tracker_response):
    '''
    Capture and parse the tracker response
    '''
